Application: A patch that combines multiple modules to achieve a specific goal, for example, a compositional assistant that mixes multiple instances of looped sample playback to allow a user to build up and record musical phrasesBaseline: The painstakingly selected package that we expect all users to have in their Max path and that all other software may depend onDemo: patch that shows one (impressive) idea, not necessarily with enough flexibility or generality to be useful for extended work (Desired reaction: “Wow!”)Dependency: when any patch requires a specific form of supportHelp patch: shows how one object (patch/external/etc.) worksModule: Generalized patch, to be used in an application, demo, tutor, or tutorial   Object: General term meaning either patch or external written in C, Java, or JavascriptPackage: specific, organized subset of the repository that serves some purposePatch (aka “abstraction”): any unit of software made in MaxRepertoire: An application specific to a particular aesthetic expression such as a musical composition or installation

Repository: versioned storage of “all” CNMAT's software and related content.Support: an object that somehow supports your work, or a directory of sameTool: A vague term we try to avoid when being precise. “What software isn’t a tool?”Tutor: A very small tutorial about one specific thing, e.g., a thorough explanation of MSP’s “DSP Status” window.Tutorial: series of patches explaining and contextualizing a package for teaching purposes, e.g., CNMAT’s Spectral Tutorials. (Desired reaction: “I understand.”)

Working Copy: A copy of a subset of the repository where a user can inspect, run, and modify files, and eventually check new and improved versions back into the repository.