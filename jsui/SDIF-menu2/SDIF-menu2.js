/*SDIF Menu Draft #4This one can draw a little nicer.by Michael Zbyszynski, 16 April 2005Some UC Copyright info here?*/outlets = 2;sketch.default2d();sketch.fsaa = 0;var title = ["no file", 0];var streams = new Array();var h = 0;var c = 0.;var hilite = 999;var j = 999;var full = 0;var mybrgb = [0.9,0.9,0.9];var myfrgb = [0.,0.,0.];var myrgb2 = [1,1,1];var hilitergb = [0.2,0.2,0.8];var myfont = "Sans Serif";  // Geneva on Mac, Arial on PCvar myfontsize = 12;var offset = 20;draw();function anything(murph,b,c){	var murph = arrayfromargs(messagename,arguments);	if (murph[0] == "/file")		{	clear();	title[0] = murph[1];	title[1] = murph[2];	full = 0;	draw();	refresh();	}	if (murph[0] == "/stream")	{	streams[h] = new astream(murph[1], murph[1], murph[1], murph[1], murph[1]);	streams[h].number = murph[1];	streams[h].type = murph[2];	streams[h].dat1 = murph[3];	streams[h].dat2 = murph[4];	streams[h].dat3 = murph[5];	h++;	full = 1;	if (h > title[1]) h = title[1];	draw();	refresh();	}}function msg_int(a){	for (i=0;i<h;i++)	{	if (streams[i].number == a) 	{	j = i;	joe = title[0] + streams[0].number; 	outlet(0, title[0], streams[j].number);	}	}	bang();	}function frgb(r,g,b){	myfrgb[0] = r/255.;	myfrgb[1] = g/255.;	myfrgb[2] = b/255.;	draw();	refresh();}function highlight(r,g,b){	hilitergb[0] = r/255.;	hilitergb[1] = g/255.;	hilitergb[2] = b/255.;	draw();	refresh();}function brgb(r,g,b){	mybrgb[0] = r/255.;	mybrgb[1] = g/255.;	mybrgb[2] = b/255.;	draw();	refresh();}function rgb2(r,g,b){	myrgb2[0] = r/255.;	myrgb2[1] = g/255.;	myrgb2[2] = b/255.;	draw();	refresh();}function fsaa(v){	sketch.fsaa = v;	draw();	refresh();}function clear(p,q){	h = 0;	full = 0;	title = ["no file", 0];	streams = new Array();	draw();	refresh();}// the astream class constructorfunction astream(a, b, c, d, e) {	this.number = a;	this.name = b;	this.dat1 = 0.;	this.dat2= d;	this.dat3 = e;}function howmany(){	r = title[1];	outlet(1, r);}function font(v){	myfont = v.toString();	draw();	refresh();}function fontsize(v){	myfontsize = v;	draw();	refresh();}function draw(){	var str,width,height,aspect;	height = box.rect[3] - box.rect[1]; 	width = box.rect[2] - box.rect[0]; 	aspect = width/height;	with (sketch) {		//erase background		glclearcolor(mybrgb);		glclear();			glcolor(myfrgb);		font(myfont);		fontsize(myfontsize*1.2);		offset = (myfontsize/12)*20;		moveto(screentoworld (10, offset))		joe = "name: " + title[0] +  "   streams: " + title[1];		text(joe);		moveto(screentoworld (0, offset+3))		lineto (screentoworld (1000, offset+3, 0));		fontsize(myfontsize);			for (i=0;i<h;i++)		{		jim = (offset * (i+1) + offset + 3);		moveto(screentoworld (10, jim))		if (j == i) glcolor(hilitergb)			else glcolor(myfrgb);		joe = streams[i].number + " " + streams[i].type + " " + streams[i].dat1 + " " + streams[i].dat2 + " " + streams[i].dat3;		text(joe);		}	}}function bang(){	draw();	refresh();}function onresize(w,h){	draw();	refresh();}onresize.local = 1; //privatefunction onclick(x,y){	if (full == 0)	{	err = "¥ error: No SDIF streams available";	post (err);	post ();	}	else	 {	j = 999;	for (i=0;i<h;i++)	{	k = (i * 20) + 20;	if (k< y) j = i;	}	if (j > title[1]) j = title[1]-1;	hilite = j;	joe = title[0] + streams[0].number; 	outlet(0, title[0], streams[j].number);	bang();	}}onclick.local = 1; //private